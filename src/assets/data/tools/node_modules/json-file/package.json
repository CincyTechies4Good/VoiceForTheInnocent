{
  "_args": [
    [
      {
        "raw": "json-file@^0.1.0",
        "scope": null,
        "escapedName": "json-file",
        "name": "json-file",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/bedrock/Dev/VoiceForTheInnocent/src/assets/data/tools"
    ]
  ],
  "_from": "json-file@>=0.1.0 <0.2.0",
  "_id": "json-file@0.1.0",
  "_inCache": true,
  "_location": "/json-file",
  "_npmUser": {
    "name": "k",
    "email": "kbjr14@gmail.com"
  },
  "_npmVersion": "1.1.65",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-file@^0.1.0",
    "scope": null,
    "escapedName": "json-file",
    "name": "json-file",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/json-file/-/json-file-0.1.0.tgz",
  "_shasum": "74b79891ba71bf7b9f3dbbcca10ba8efc1cf274a",
  "_shrinkwrap": null,
  "_spec": "json-file@^0.1.0",
  "_where": "/Users/bedrock/Dev/VoiceForTheInnocent/src/assets/data/tools",
  "author": {
    "name": "James Brumond"
  },
  "bugs": {
    "url": "https://github.com/UmbraEngineering/json-file/issues"
  },
  "dependencies": {},
  "description": "A module for modifiying JSON files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "74b79891ba71bf7b9f3dbbcca10ba8efc1cf274a",
    "tarball": "https://registry.npmjs.org/json-file/-/json-file-0.1.0.tgz"
  },
  "homepage": "https://github.com/UmbraEngineering/json-file#readme",
  "keywords": [
    "json",
    "file",
    "i/o"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "k",
      "email": "kbjr14@gmail.com"
    }
  ],
  "name": "json-file",
  "optionalDependencies": {},
  "readme": "# json-file\n\nA Node.js module for reading/modifying/writing JSON files.\n\n## Install\n\n```bash\n$ npm install json-file\n```\n\n## Usage\n\n```javascript\nvar json = require('json-file');\n\n// Load a JSON file\nvar file = json.read('./package.json');\n\n// Read and write some values\nfile.get('version');  // eg. \"1.0.0\"\nfile.get('repository.type');  // eg. \"git\"\nfile.set('description', 'Some new description');\n\n// The raw data\nconsole.log(file.data);\n\n// Write the updates to the file\nfile.writeSync();\n```\n\n## API\n\n#### json.read ( String filePath[, Function callback ])\n\nA shortcut for creating a `json.File` object and loading the file contents.\n\n```javascript\n// This...\nvar file = json.read('/a/b/c');\n\n// Is equivilent to this...\nvar file = new json.File('/a/b/c');\nfile.readSync();\n\n// Likewise, this...\nvar file = json.read('/a/b/c', function() {\n\t// ...\n});\n\n// Is equivilent to this...\nvar file = new json.File('/a/b/c');\nfile.read(function() {\n\t// ...\n});\n```\n#### json.File ( String filePath )\n\nJSON File object constructor. Takes a path to a JSON file.\n\n```javascript\nvar file = new json.File('/path/to/file.json');\n```\n\n#### File::read ( Function callback )\n\nReads the JSON file and parses the contents.\n\n```javascript\nfile.read(function() {\n\t//\n\t// Now you can do things like use the .get() and .set() methods\n\t//\n});\n```\n#### File::readSync ( void )\n\nReads the JSON file and parses the contents synchronously.\n\n#### File::write ( Function callback )\n\nWrite the new contents back to the file.\n\n```javascript\nfile.write(function() {\n\t//\n\t// Your JSON file has been updated\n\t//\n});\n```\n\n#### File::writeSync ( void )\n\nWrite the new contents back to the file synchronously.\n\n#### File::get ( Mixed key )\n\nGet a value from the JSON data.\n\n```javascript\nfile.get('foo'); // === file.data['foo']\nfile.get('foo.bar.baz'); // === file.data['foo']['bar']['baz']\n```\n\n#### File::set ( Mixed key, Mixed value )\n\nSet a value in the JSON data.\n\n```javascript\nfile.set('foo', 'bar');\nfile.set('a.b.c', 'baz');\n```\n\nThe `set` method returns the file object itself, so this method can be chained.\n\n```javascript\nfile.set('a', 'foo')\n    .set('b', 'bar')\n    .set('c', 'baz');\n```\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/UmbraEngineering/json-file.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
